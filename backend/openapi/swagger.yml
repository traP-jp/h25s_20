openapi: 3.0.0
info:
  title: hs_25_20_server API
  version: "1.0.0"
servers:
  - url: 'http://localhost:8080/api'
    description: ローカル環境
  - url: 'https://YOUR_PRODUCTION_URL'
    description: 本番環境
paths:
  /health:
    get:
      summary: Health check endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
  /users:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created successfully
        '400':
          description: Invalid request
        '409':
          description: Username already exists
        '500':
          description: Internal server error
  /rooms:
    get:
      summary: Get a list of rooms
      responses:
        '200':
          description: A list of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
        '500':
          description: Internal server error

components:
  schemas:
    UserCreate:
      type: object
      properties:
        username:
          type: string
          example: "testuser"
        password:
          type: string
          description: "SHA256 hashed password"
          example: "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8"
      required:
        - username
        - password
    Room:
      type: object
      properties:
        roomId:
          type: integer
          example: 1
        roomName:
          type: string
          example: "Room 1"
        users:
          type: array
          items:
            type: string
            example: "player1"
        isOpened:
          type: boolean
          example: true
      required:
        - roomId
        - roomName
        - users
        - isOpened
